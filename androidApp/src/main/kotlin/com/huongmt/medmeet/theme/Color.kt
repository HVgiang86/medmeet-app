package com.huongmt.medmeet.theme

import androidx.compose.ui.graphics.Color

// generated by https://m3.material.io/theme-builder#/custom
// Color palette was taken here: https://colorhunt.co/palettes/popular
// Main Colors
internal val Midnight_Blue = Color(0xFF1C2A32) // Primary

internal val md_theme_light_primary = Midnight_Blue
internal val md_theme_light_onPrimary = Color(0xFFFFFFFF)
internal val md_theme_light_primaryContainer = Color(0xFFFFFFFF)
internal val md_theme_light_onPrimaryContainer = Color(0xFF374151)

// Secondary Colors (You'll need to define these based on your Figma files)
internal val md_theme_light_secondary = Color(0xFF625B71)
internal val md_theme_light_onSecondary = Color(0xFFFFFFFF)
internal val md_theme_light_secondaryContainer = Color(0xFFE5E7EB)
internal val md_theme_light_onSecondaryContainer = Color(0xFF1C2A3A)

// Tertiary Colors (You'll need to define these based on your Figma files)
internal val md_theme_light_tertiary = Color(0xFF014737)
internal val md_theme_light_onTertiary = Color(0xFFFFFFFF)
internal val md_theme_light_tertiaryContainer = Color(0xFFA4CFC3)
internal val md_theme_light_onTertiaryContainer = Color(0xFF1C2A32)

// Error Colors (You'll need to define these based on your Figma files)
internal val md_theme_light_error = Color(0xFF771D1D)
internal val md_theme_light_errorContainer = Color(0xFFFFFFFF)
internal val md_theme_light_onError = Color(0xFFFFFFFF)
internal val md_theme_light_onErrorContainer = Color(0xFF771D1D)

// Background Colors
internal val md_theme_light_background = Color(0xFFFFFFFF) // Background
internal val md_theme_light_onBackground = Color(0xFF1C1B1F) // On Background

// Surface Colors
internal val md_theme_light_surface = Color(0xFFF9FAFB) // Surface
internal val md_theme_light_onSurface = Color(0xFF1C1B1F) // On Surface
internal val md_theme_light_surfaceVariant = Color(0xFFFFFFFF) // Surface Variant
internal val md_theme_light_onSurfaceVariant = Color(0xFF6B7280) // On Surface Variant
internal val md_theme_light_surfaceContainer = Color(0xFFF3F3F4) // Surface Container
internal val md_theme_light_onSurfaceContainer = Color(0xFF1C1C1E) // On Surface Container

// Other Colors
internal val md_theme_light_outline = Color(0xFFD1D5DB) // Outline
internal val md_theme_light_inverseOnSurface = Color(0xffffffff) // Inverse On Surface
internal val md_theme_light_inverseSurface = Color(0xFF313033) // Inverse Surface
internal val md_theme_light_inversePrimary = Color(0xffffffff) // Inverse Primary
internal val md_theme_light_shadow = Color(0xFF000000) // Shadow
internal val md_theme_light_surfaceTint = Color(0xFFF3F4F6) // Surface Tint
internal val md_theme_light_outlineVariant = Color(0xFFD1D5DB) // Outline Variant
internal val md_theme_light_scrim = Color(0xFF000000) // Scrim

// Greyscale
internal val Grey_50 = Color(0xFFF9FAFB)
internal val Grey_100 = Color(0xFFF3F4F6)
internal val Grey_200 = Color(0xFFE5E7EB)
internal val Grey_300 = Color(0xFFD1D5DB)
internal val Grey_400 = Color(0xFF9CA3AF)
internal val Grey_500 = Color(0xFF6B7280)
internal val Grey_600 = Color(0xFF4B5563)
internal val Grey_700 = Color(0xFF374151)
internal val Grey_800 = Color(0xFF1F2937)
internal val Grey_900 = Color(0xFF111827)

// Other Colors
internal val Deep_Teal = Color(0xFF014737)
internal val Teal = Color(0xFF0D6F54)
internal val Light_Teal = Color(0xFF4DA491)
internal val Green = Color(0xFF93A39E)
internal val Pale_Green = Color(0xFFDEE7E0)
internal val Dark_Red = Color(0xFF761D1D)
internal val Deep_Pink = Color(0xFFDC9497)
internal val Pink = Color(0xFFDE6683)
internal val Light_Pink = Color(0xFFFD83A8)
internal val Light_Purple = Color(0xFFACB5CD)
internal val Blue = Color(0xFF1464B2)
internal val Pale_Blue = Color(0xFF89CCD2)
internal val Purple = Color(0xFF352261)
internal val Orange = Color(0xFFF5AA6B)

val Black = Color(0xff000000)
val White = Color(0xffffffff)
val Black_28 = Color(0xFF262628)
val Black_34 = Color(0xFF110034)
val Black_22 = Color(0xFF222222)
val Black_10 = Color(0xFF101010)
val Black_alpha_8 = Color(0, 0, 0, 21)
val Black_alpha_60 = Color(0x99000000)
val Yellow = Color(0xFFFFD700)
val Yellow_alpha_0 = Color(245, 216, 55, 0)
val Yellow_alpha_39 = Color(255, 215, 0, 99)
val Silver = Color(0xFFD9D9D9)
val Silver_d8 = Color(0xFFD3D1D8)
val Divider_color = Color(0xFFE5E5E5)
val Orange_alpha_5 = Color(0x0DE54F4C)
val Orange_alpha_12 = Color(0x1FDF3448)
val Orange_alpha_50 = Color(0x80E54F4C)
val Orange_51 = Color(0xFFF28551)
val Orange_55 = Color(0xFFF9A455)
val Red_48 = Color(0xFFDE3048)
val Alabaster = Color(0xFFF1E9E9)

val Gray = Color(0xFFEAE6E6)
val Card_Border_Gray = Color(0x8b888888)
